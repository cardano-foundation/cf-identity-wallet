name: Build and publish docker artifacts

on:
  push:
    branches: [ main, develop ]
  pull_request:
    types: [ opened, synchronize ]
    paths:
    - 'Earthfile'
    - '.github/workflows/docker-builds.yaml'
    - 'services/credential-server-ui/**'
    - 'services/credential-server/**'
  workflow_dispatch:

env:
  PRIVATE_DOCKER_REGISTRY_URL: ${{ secrets.GITLAB_DOCKER_REGISTRY_URL }}
  PRIVATE_DOCKER_REGISTRY_USER: Deploy-Token
  PRIVATE_DOCKER_REGISTRY_PASS: ${{ secrets.GITLAB_PKG_REGISTRY_TOKEN }}

jobs:
  publish:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set extra environment and metadata
        id: metadata
        run: |
          BRANCH=${GITHUB_REF##*/}
          GIT_SHORT_COMMIT=$(git rev-parse --short "$GITHUB_SHA")
          CURRENT_VERSION=$(jq -r .version package.json)

          if [ ${{github.event_name}} == "pull_request" ]
          then
            GIT_BRANCH_SHORT_COMMIT=$(git rev-parse --short ${{ github.event.pull_request.head.sha }})
            PR_NUMBER=$(echo $GITHUB_REF | awk -F/ '{ print $3 }')
            ARTIFACT_VERSION="${CURRENT_VERSION}-PR${PR_NUMBER}"
            echo "ARTIFACT_VERSION=${ARTIFACT_VERSION}" | tee -a "$GITHUB_ENV" | tee -a "$GITHUB_OUTPUT"

            # set earthly docker image targets based on changed paths
            set +e
            DOCKER_IMAGES_TARGETS="$( \
              ( git log --pretty=format:'%h' -n 1 Earthfile | grep -q ${GIT_BRANCH_SHORT_COMMIT} ) && \
              ( git log --patch -n1 Earthfile | grep -q "ARG.*global.*KERIA_GIT" ) && \
              echo idw-keria
            )"
            DOCKER_IMAGES_TARGETS="$DOCKER_IMAGES_TARGETS $( \
                ( git log --pretty=format:'%h' -n 1 Earthfile | grep -q ${GIT_BRANCH_SHORT_COMMIT} ) && \
                ( git log --patch -n1 Earthfile | grep -q "ARG.*global.*KERI_DOCKER" ) && \
                echo idw-witness
            )"
            DOCKER_IMAGES_TARGETS="$DOCKER_IMAGES_TARGETS $( \
                ( git log --pretty=format:'%h' -n 1 services/credential-server | grep -q ${GIT_BRANCH_SHORT_COMMIT} ) && \
                echo cred-issuance
            )"
            DOCKER_IMAGES_TARGETS="$DOCKER_IMAGES_TARGETS $( \
                ( git log --pretty=format:'%h' -n 1 services/credential-server-ui | grep -q ${GIT_BRANCH_SHORT_COMMIT} ) && \
                echo cred-issuance-ui
            )"
            set -e
            STRIPPED_DOCKER_IMAGES_TARGETS=$(echo $DOCKER_IMAGES_TARGETS | tr -s ' ' | sed -e 's|^ ||' -e 's| $||')
            if [ ! -z "${STRIPPED_DOCKER_IMAGES_TARGETS}" ]; then
              echo "DOCKER_IMAGES_TARGETS=${STRIPPED_DOCKER_IMAGES_TARGETS}" | tee -a "$GITHUB_ENV" | tee -a "$GITHUB_OUTPUT"
            fi

          else
            echo "BRANCH=${GITHUB_REF##*/}" >> "$GITHUB_OUTPUT"

            ARTIFACT_VERSION=${CURRENT_VERSION}-${BRANCH}
            echo "ARTIFACT_VERSION=${ARTIFACT_VERSION}" | tee -a "$GITHUB_ENV" | tee -a "$GITHUB_OUTPUT"
          fi

          echo "DOCKER_COMMIT_TAG=${ARTIFACT_VERSION}-${GIT_SHORT_COMMIT}" | tee -a "$GITHUB_ENV" | tee -a "$GITHUB_OUTPUT"
          echo "DOCKER_COMMIT_GHRUNID_TAG=${ARTIFACT_VERSION}-${GIT_SHORT_COMMIT}-${GITHUB_RUN_ID}" | tee -a "$GITHUB_ENV" | tee -a "$GITHUB_OUTPUT"

          echo "EARTHLY_DOCKER_IMAGES_EXTRA_TAGS=${ARTIFACT_VERSION}-${GIT_SHORT_COMMIT} ${ARTIFACT_VERSION}-${GIT_SHORT_COMMIT}-${GITHUB_RUN_ID}" | tee -a "$GITHUB_ENV" | tee -a "$GITHUB_OUTPUT"

      - name: Docker Login (private registry)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.PRIVATE_DOCKER_REGISTRY_URL }}
          username: ${{ env.PRIVATE_DOCKER_REGISTRY_USER }}
          password: ${{ env.PRIVATE_DOCKER_REGISTRY_PASS }}

      - name: Docker Login (hub.docker.com)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.HUB_DOCKER_COM_USER }}
          password: ${{ secrets.HUB_DOCKER_COM_PASS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - uses: earthly/actions-setup@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: "0.8.14"

      - name: üåç earthly (docker build and push)
        run: |
          # For PR builds, we skip any earthly build if there are no changes on any known target-related file, for branch builds, we just build everything
          if [ ${{github.event_name}} == "pull_request" ]
          then
            if [ ! -z "${DOCKER_IMAGES_TARGETS}" ]
            then
              earthly +docker-publish \
              --PUSH=true \
              --DOCKER_REGISTRIES="${{ secrets.DOCKER_REGISTRIES }}" \
              --DOCKER_IMAGES_EXTRA_TAGS="${EARTHLY_DOCKER_IMAGES_EXTRA_TAGS}" \
              --DOCKER_IMAGES_TARGETS="${DOCKER_IMAGES_TARGETS}"
            else
              echo "[+] No changes on any known target-related file, skipping earthly build..."
            fi
          else
            if [ ${{github.event_name}} == "workflow_dispatch" ]; then FORCE_BUILD="--FORCE_BUILD=true"; fi
            earthly +docker-publish \
            ${FORCE_BUILD} \
            --PUSH=true \
            --DOCKER_REGISTRIES="${{ secrets.DOCKER_REGISTRIES }}" \
            --DOCKER_IMAGES_EXTRA_TAGS="${EARTHLY_DOCKER_IMAGES_EXTRA_TAGS}"
          fi
