name: Build and publish docker artifacts

on:
  push:
    branches: [ main, develop ]
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
    types: [ opened, synchronize ]
    branches-ignore: [ main ]
    paths:
    - 'Earthfile'
    - '.github/workflows/docker-builds.yaml'
    - 'services/credential-server-ui/**'
    - 'services/credential-server/**'
  workflow_dispatch:
    inputs:
      images:
        description: 'Select which earthly targets to build and push'
        required: true
        default: 'all'
        type: choice
        options:
        - idw-keria
        - idw-witness
        - cred-issuance
        - cred-issuance-ui
        - cip45-sample-dapp
        - all

env:
  PRIVATE_DOCKER_REGISTRY_URL: ${{ secrets.GITLAB_DOCKER_REGISTRY_URL }}
  PRIVATE_DOCKER_REGISTRY_USER: Deploy-Token
  PRIVATE_DOCKER_REGISTRY_PASS: ${{ secrets.GITLAB_PKG_REGISTRY_TOKEN }}
  DOCKER_PUSH: true

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: set-matrix
        id: set-matrix
        run: |
          echo 'matrix={"platform":["linux/amd64","linux/arm64"]}' | tee -a "$GITHUB_ENV" | tee -a "$GITHUB_OUTPUT"
  build-n-publish:
    needs: set-matrix
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.set-matrix.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup qemu for arm builds
        uses: docker/setup-qemu-action@v3
        if: matrix.platform == 'linux/arm64'
        with:
          platforms: arm64

      - name: ‚õÆ cf-gha-baseline
        uses: cardano-foundation/cf-gha-workflows/./actions/cf-gha-baseline@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRIVATE_DOCKER_REGISTRY_URL: ${{ env.PRIVATE_DOCKER_REGISTRY_URL }}
          PRIVATE_DOCKER_REGISTRY_USER: ${{ env.PRIVATE_DOCKER_REGISTRY_USER }}
          PRIVATE_DOCKER_REGISTRY_PASS: ${{ env.PRIVATE_DOCKER_REGISTRY_PASS }}
          HUB_DOCKER_COM_USER: ${{ secrets.HUB_DOCKER_COM_USER }}
          HUB_DOCKER_COM_PASS: ${{ secrets.HUB_DOCKER_COM_PASS }}
          DOCKER_REGISTRIES: "${{ secrets.DOCKER_REGISTRIES }}"

      - name: Set docker image targets based on path changes from last commit
        id: metadata
        run: |

          if [ ${{github.event_name}} == "workflow_dispatch" ]
          then
            case "${{ github.event.inputs.images }}" in
              idw-keria)
                DOCKER_IMAGES_TARGETS="idw-keria"
                ;;
              idw-witness)
                DOCKER_IMAGES_TARGETS="idw-witness"
                ;;
              cred-issuance)
                DOCKER_IMAGES_TARGETS="cred-issuance"
                ;;
              cred-issuance-ui)
                DOCKER_IMAGES_TARGETS="cred-issuance-ui"
                ;;
              cip45-sample-dapp)
                DOCKER_IMAGES_TARGETS="cip45-sample-dapp"
                ;;
              all)
                DOCKER_IMAGES_TARGETS="idw-keria idw-witness cred-issuance cred-issuance-ui cip45-sample-dapp"
                ;;
              *)
                echo "Invalid option, exiting..."
                exit 1
                ;;
            esac

            echo "DOCKER_IMAGES_TARGETS=${DOCKER_IMAGES_TARGETS}" | tee -a "$GITHUB_ENV" | tee -a "$GITHUB_OUTPUT"
          fi

          if [ ${{github.event_name}} == "pull_request" ]
          then
            GIT_BRANCH_SHORT_COMMIT=$(git rev-parse --short ${{ github.event.pull_request.head.sha }})

            # set earthly docker image targets based on changed paths
            set +e
            DOCKER_IMAGES_TARGETS="$( \
              ( git log --pretty=format:'%h' -n 1 Earthfile | grep -q ${GIT_BRANCH_SHORT_COMMIT} ) && \
              ( git log --patch -n1 Earthfile | grep -q "ARG.*global.*KERIA_" ) && \
              echo idw-keria
            )"
            DOCKER_IMAGES_TARGETS="$DOCKER_IMAGES_TARGETS $( \
                ( git log --pretty=format:'%h' -n 1 Earthfile | grep -q ${GIT_BRANCH_SHORT_COMMIT} ) && \
                ( git log --patch -n1 Earthfile | grep -q "ARG.*global.*KERI_DOCKER" ) && \
                echo idw-witness
            )"
            DOCKER_IMAGES_TARGETS="$DOCKER_IMAGES_TARGETS $( \
                ( git log --pretty=format:'%h' -n 1 services/credential-server | grep -q ${GIT_BRANCH_SHORT_COMMIT} ) && \
                echo cred-issuance
            )"
            DOCKER_IMAGES_TARGETS="$DOCKER_IMAGES_TARGETS $( \
                ( git log --pretty=format:'%h' -n 1 services/credential-server-ui | grep -q ${GIT_BRANCH_SHORT_COMMIT} ) && \
                echo cred-issuance-ui
            )"
            DOCKER_IMAGES_TARGETS="$DOCKER_IMAGES_TARGETS $( \
                ( git log --pretty=format:'%h' -n 1 services/cip45-sample-dapp | grep -q ${GIT_BRANCH_SHORT_COMMIT} ) && \
                echo cip45-sample-dapp
            )"
            set -e
            STRIPPED_DOCKER_IMAGES_TARGETS=$(echo $DOCKER_IMAGES_TARGETS | tr -s ' ' | sed -e 's|^ ||' -e 's| $||')
            if [ ! -z "${STRIPPED_DOCKER_IMAGES_TARGETS}" ]; then
              echo "DOCKER_IMAGES_TARGETS=${STRIPPED_DOCKER_IMAGES_TARGETS}" | tee -a "$GITHUB_ENV" | tee -a "$GITHUB_OUTPUT"
            fi
          fi

      - name: üåç earthly (docker build and push)
        run: |
          # For PR builds, we skip any earthly build if there are no changes on any known target-related file, for branch builds, we just build everything
          if [ ${{github.event_name}} == "pull_request" ]
          then
            if [ ! -z "${DOCKER_IMAGES_TARGETS}" ]
            then
              earthly --platform=${{ matrix.platform }} \
              +docker-publish \
              --PUSH=true \
              --TARGET_PLATFORM="${{ matrix.platform }}" \
              --DOCKER_REGISTRIES="${{ secrets.DOCKER_REGISTRIES }}" \
              --DOCKER_IMAGES_EXTRA_TAGS="${EARTHLY_DOCKER_IMAGES_EXTRA_TAGS}" \
              --DOCKER_IMAGES_LABELS="${DOCKER_METADATA_OUTPUT_LABELS_COMMA_SEPARATED}" \
              --DOCKER_IMAGES_TARGETS="${DOCKER_IMAGES_TARGETS}"
            else
              echo "[+] No changes on any known target-related file, skipping earthly build..."
            fi
          else
            # if the workflow was triggered manually, we force the build
            if [ ${{github.event_name}} == "workflow_dispatch" ]
            then 
              FORCE_BUILD="--FORCE_BUILD=true"
              DOCKER_IMAGES_TARGETS="--DOCKER_IMAGES_TARGETS=\"${DOCKER_IMAGES_TARGETS}\""
            fi

            earthly --platform=${{ matrix.platform }} \
            +docker-publish \
            ${FORCE_BUILD} \
            ${DOCKER_IMAGES_TARGETS} \
            --PUSH=true \
            --TARGET_PLATFORM="${{ matrix.platform }}" \
            --DOCKER_REGISTRIES="${{ secrets.DOCKER_REGISTRIES }}" \
            --DOCKER_IMAGES_LABELS="${DOCKER_METADATA_OUTPUT_LABELS_COMMA_SEPARATED}" \
            --DOCKER_IMAGES_EXTRA_TAGS="${EARTHLY_DOCKER_IMAGES_EXTRA_TAGS}"
          fi

  merge-multi-platform-manifests:
    needs: build-n-publish
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ‚õÆ cf-gha-baseline
        uses: cardano-foundation/cf-gha-workflows/./actions/cf-gha-baseline@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRIVATE_DOCKER_REGISTRY_URL: ${{ env.PRIVATE_DOCKER_REGISTRY_URL }}
          PRIVATE_DOCKER_REGISTRY_USER: ${{ env.PRIVATE_DOCKER_REGISTRY_USER }}
          PRIVATE_DOCKER_REGISTRY_PASS: ${{ env.PRIVATE_DOCKER_REGISTRY_PASS }}
          HUB_DOCKER_COM_USER: ${{ secrets.HUB_DOCKER_COM_USER }}
          HUB_DOCKER_COM_PASS: ${{ secrets.HUB_DOCKER_COM_PASS }}
          DOCKER_REGISTRIES: "${{ secrets.DOCKER_REGISTRIES }}"

      - name: Merge multi-platform manifests
        run: |
          earthly \
          +docker-manifests-merge \
          --PLATFORMS=$(jq -r '.platform[]' <<< "${{ needs.set-matrix.outputs.matrix }}") \
          --DOCKER_IMAGES_TARGETS="${{ steps.metadata.outputs.DOCKER_IMAGES_TARGETS }}" \
          --DOCKER_REGISTRIES="${{ secrets.DOCKER_REGISTRIES }}" \
          --DOCKER_IMAGES_EXTRA_TAGS="${EARTHLY_DOCKER_IMAGES_EXTRA_TAGS}"
